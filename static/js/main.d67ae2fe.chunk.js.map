{"version":3,"sources":["application/selectors/ui.jsx","application/actions/ui.jsx","infrastructure/router/page-route.jsx","views/pages/notfoundpage.jsx","infrastructure/router/breadcrumb-map.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","infrastructure/services/logger/console.jsx","infrastructure/services/local/write-local.jsx","infrastructure/services/local/get-local.jsx","infrastructure/axios/post.jsx","infrastructure/shared/static.jsx","infrastructure/services/api/login/index.jsx","infrastructure/axios/get.jsx","infrastructure/axios/delete.jsx","infrastructure/axios/put.jsx","infrastructure/services/index.jsx","infrastructure/services/api/index.jsx","infrastructure/services/api/laporanstockglobalproduksi/index.jsx","application/reducers/login.jsx","application/reducers/ui.jsx","application/reducers/laporanstockglobalproduksi.jsx","application/reducers/index.jsx","application/middleware/ui.jsx","infrastructure/shared/sweetalert.jsx","application/store.jsx","application/middleware/login.jsx","application/middleware/laporanstockglobalproduksi.jsx","application/middleware/index.jsx","index.js","application/actions/laporanstockglobalproduksi.jsx","application/actions/login.jsx"],"names":["data","getLoading","state","ui","loading","getBtnLoading","btnLoading","getTypeTableLayout","typeTable","PAGE_LOADED_LOGIN","SET_LOADING_ON","SET_LOADING_OFF","BUTTON_LOADED","SET_LOADING_BUTTON_ON","SET_LOADING_BUTTON_OFF","CHANGE_TABLE_LAYOUT","pageLoadedLogin","type","setLoading","isLoading","payload","setLoadingButton","setTableLayout","Login","lazy","Dashboard","LaporanStockGolbalProduksi","routes","NotFoundPage","status","title","subTitle","extra","href","breadcrumbNameMap","App","Header","Layout","Footer","Content","Sider","SubMenu","Menu","dispatch","useDispatch","path","usePath","useSelector","routeResults","useRoutes","today","Date","pathSnippets","split","filter","i","extrabreadcrumbItems","map","_","index","url","slice","join","Item","breadcrumbItems","concat","useEffect","background","loaderColor","style","height","color","textAlign","marginTop","className","minHeight","collapsible","theme","defaultSelectedKeys","mode","defaultOpenKeys","includes","icon","HomeOutlined","ReadOutlined","padding","paddingRight","gutter","xs","sm","offset","paddingLeft","fontSize","toLocaleDateString","span","SettingOutlined","ItemGroup","margin","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","log","console","writeLocal","nama","localStorage","setItem","JSON","stringify","getLocal","parse","getItem","listExport","AxiosPost","a","headers","language","timeout","axios","post","response","value","error","AxiosPostLogin","baseurl","process","URL_LOGIN","URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI","URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI","login","doLogin","word","AxiosGet","percentComplete","config","onUploadProgress","progressEvent","Math","floor","loaded","total","get","percentCompleted","AxiosDelete","delete","AxiosPut","put","services","api","laporanStockGlobalProduksi","getAllLaporanStockGlobalProduksi","AxiosGetBody","addLaporanStockGlobalProduksi","datakirim","deleteLaporanStockGlobalProduksi","deleteAxios","editLaporanStockGlobalProduksi","initialState","feedback","login1","action","LOGIN_SUCCESS","LOGIN_FAILED","reducer","feedback_R","feedback_L","isEdit","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS","SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED","combineReducers","form","formReducer","next","getState","Failed","message","Swal","fire","text","Success","key","SEND_LOGIN","LoginForm","values","loginSuccess","sweetalert","user_id","password","content","setTimeout","success","duration","replace","loginFailed","toast","GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI","FormLaporanGlobalProduksi","tgl","date","repair","tipe_laporan","setDataLaporanStockGlobalProduksiLSuccess","setDataLaporanStockGlobalProduksiRSuccess","reset","setDataLaporanStockGlobalProduksiLFailed","laporanstockglobalproduksi","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","app","fallback","basename","store","createStore","reducers","applyMiddleware","middleware","f","rel","ReactDOM","hydrate","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","sendLogin"],"mappings":"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","file":"static/js/main.d67ae2fe.chunk.js","sourcesContent":["const getLoading = (state) => state.ui.loading;\r\nconst getBtnLoading = (state) => state.ui.btnLoading;\r\nconst getTypeTableLayout = (state) => state.ui.typeTable;\r\n\r\nconst data = { getLoading, getBtnLoading, getTypeTableLayout };\r\n\r\nexport default data;\r\n","export const PAGE_LOADED_LOGIN = '[ui] page loaded login';\r\nexport const SET_LOADING_ON = '[ui] page loading on';\r\nexport const SET_LOADING_OFF = '[ui] page loading off';\r\nexport const BUTTON_LOADED = '[ui] button loaded';\r\nexport const SET_LOADING_BUTTON_ON = '[ui] button loading on';\r\nexport const SET_LOADING_BUTTON_OFF = '[ui] button loading off';\r\nexport const TABLE_LAYOUT = '[ui] table layout';\r\nexport const CHANGE_TABLE_LAYOUT = '[ui] table layout L';\r\n// export const SET_TABLE_LAYOUT_E = '[ui] table layout E';\r\n\r\n// ini adalah action yang nantinya akan dipanggil di middleware\r\nexport const pageLoadedLogin = {\r\n  type: PAGE_LOADED_LOGIN,\r\n};\r\n\r\nexport const buttonLoaded = {\r\n  type: BUTTON_LOADED,\r\n};\r\n\r\nexport const tableLayout = {\r\n  type: TABLE_LAYOUT,\r\n};\r\n\r\nexport const setLoading = (isLoading) => ({\r\n  type: isLoading ? SET_LOADING_ON : SET_LOADING_OFF,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const setLoadingButton = (isLoading) => ({\r\n  type: isLoading ? SET_LOADING_BUTTON_ON : SET_LOADING_BUTTON_OFF,\r\n  payload: isLoading,\r\n});\r\n\r\nexport const setTableLayout = (typeTable) => ({\r\n  type: CHANGE_TABLE_LAYOUT,\r\n  payload: typeTable,\r\n});\r\n","import React, { lazy } from 'react';\r\n\r\nconst Login = lazy(() => import('../../views/pages/login'));\r\nconst Dashboard = lazy(() => import('../../views/pages/dashboard'));\r\nconst LaporanStockGolbalProduksi = lazy(() =>\r\n  import('../../views/pages/laporan/stock_global_produksi/laporanstockglobalproduksi'),\r\n);\r\n\r\nconst routes = {\r\n  '/': () => <Login />,\r\n  '/dashboard': () => <Dashboard />,\r\n  '/laporan/stock-global-produksi': () => <LaporanStockGolbalProduksi />,\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"Sorry, the page you visited does not exist.\"\r\n      extra={<Button type=\"primary\" href=\"/dashboard\">Back Home</Button>}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","const breadcrumbNameMap = {\r\n  '/dashboard': 'Home',\r\n  '/laporan': 'Laporan',\r\n  '/laporan/stock-global-produksi': 'Stock Global Produksi',\r\n};\r\n\r\nexport default breadcrumbNameMap;\r\n","import React, { useEffect } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Row, Col } from 'antd';\r\nimport { useRoutes, usePath, A } from 'hookrouter';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport { HomeOutlined, ReadOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport Loading from 'react-fullscreen-loading';\r\nimport ui from './application/selectors/ui';\r\nimport { pageLoadedLogin } from './application/actions/ui';\r\nimport routes from './infrastructure/router/page-route';\r\nimport NotFoundPage from './views/pages/notfoundpage';\r\nimport breadcrumbNameMap from './infrastructure/router/breadcrumb-map';\r\n\r\nfunction App() {\r\n  const { Header, Footer, Content, Sider } = Layout;\r\n  const { SubMenu } = Menu;\r\n  const dispatch = useDispatch();\r\n  const path = usePath();\r\n  const loading = useSelector(ui.getLoading);\r\n  const routeResults = useRoutes(routes);\r\n  const today = new Date();\r\n  const pathSnippets = path.split('/').filter((i) => i);\r\n  const extrabreadcrumbItems = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return <Breadcrumb.Item>{breadcrumbNameMap[url]}</Breadcrumb.Item>;\r\n  });\r\n  const breadcrumbItems = [<Breadcrumb.Item key=\"home\">App</Breadcrumb.Item>].concat(\r\n    extrabreadcrumbItems,\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(pageLoadedLogin);\r\n  }, [dispatch]);\r\n  if (loading) {\r\n    return <Loading loading background=\"rgba(0, 0, 0, 0.39)\" loaderColor=\"#3498db\" />;\r\n  }\r\n  return path === '/' ? (\r\n    <Layout style={{ height: '100vh' }}>\r\n      <Header>\r\n        <h3 style={{ color: 'white', textAlign: 'center', marginTop: 15 }}>MY APP</h3>\r\n      </Header>\r\n      <Content style={{ height: '100vh' }}>\r\n        <div className=\"site-layout-content\">{routeResults}</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>D Design ©2021 Created by MDN</Footer>\r\n    </Layout>\r\n  ) : (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Sider collapsible>\r\n        <div className=\"logo\">\r\n          <h5 style={{ color: 'white', textAlign: 'center' }}>My App</h5>\r\n        </div>\r\n        <Menu\r\n          theme=\"dark\"\r\n          defaultSelectedKeys={[path]}\r\n          mode=\"inline\"\r\n          defaultOpenKeys={path.includes('laporan') ? ['laporan'] : ''}\r\n        >\r\n          <Menu.Item key=\"/dashboard\" icon={<HomeOutlined />}>\r\n            <A href=\"/dashboard\" className=\"link-menus\">\r\n              Dashboard\r\n            </A>\r\n          </Menu.Item>\r\n          <SubMenu key=\"laporan\" icon={<ReadOutlined />} title=\"Laporan\">\r\n            <Menu.Item key=\"/laporan/stock-global-produksi\">\r\n              <A href=\"/laporan/stock-global-produksi\" className=\"link-menus\">\r\n                Stock Global Produksi\r\n              </A>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/laporan/produksi\">\r\n              <A href=\"/laporan/produksi\" className=\"link-menus\">\r\n                Produksi\r\n              </A>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout className=\"site-layout\">\r\n        <Header className=\"site-layout-background\" style={{ padding: 0, paddingRight: 10 }}>\r\n          <Row gutter={{ xs: 8, sm: 16 }}>\r\n            <Col className=\"gutter-row\" offset={15} style={{ paddingLeft: 100 }}>\r\n              <span style={{ fontSize: 12, textAlign: 'right' }}>\r\n                Tanggal Hari Ini : {today.toLocaleDateString('id-ID')}\r\n              </span>\r\n            </Col>\r\n            <Col span={4} style={{ paddingLeft: 35 }}>\r\n              <Menu mode=\"horizontal\">\r\n                <SubMenu key=\"SubMenu\" icon={<SettingOutlined />} title=\"Pengaturan Akun\">\r\n                  <Menu.ItemGroup title=\"Pengaturan\">\r\n                    <Menu.Item key=\"setting:1\">Akun</Menu.Item>\r\n                    <Menu.Item key=\"setting:2\">\r\n                      <A href=\"/\" className=\"link-menus\">\r\n                        Log Out\r\n                      </A>\r\n                    </Menu.Item>\r\n                  </Menu.ItemGroup>\r\n                </SubMenu>\r\n              </Menu>\r\n            </Col>\r\n          </Row>\r\n        </Header>\r\n        <Content style={{ margin: '0 16px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>{breadcrumbItems}</Breadcrumb>\r\n          <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n            {routeResults || <NotFoundPage />}\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: 'center' }}>D Design ©2021 Created by MDN</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// eslint-disable-next-line\r\nconst log = console.log;\r\n\r\nexport default log;\r\n","const writeLocal = (nama, data) => {\r\n  return localStorage.setItem(nama, JSON.stringify(data));\r\n};\r\n\r\nexport default writeLocal;\r\n","const getLocal = (nama) => {\r\n  return JSON.parse(localStorage.getItem(nama));\r\n};\r\n\r\nexport default getLocal;\r\n","import axios from 'axios';\r\n\r\nconst AxiosPost = async ({ url, data }) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    // const response = await axios.post(url, data, config);\r\n    const response = await axios.post(url, data);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nconst AxiosPostLogin = async (url, data) => {\r\n  try {\r\n    const response = await axios.post(url, data);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\nconst listExport = { AxiosPost, AxiosPostLogin };\r\n\r\nexport default listExport;\r\n","const baseurl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst URL_LOGIN = `${baseurl}users/login`;\r\n\r\nconst URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\nconst URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}stock/report-global`;\r\nconst URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\nconst URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI = `${baseurl}`;\r\n\r\nconst data = {\r\n  URL_LOGIN,\r\n  URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n};\r\n\r\nexport default data;\r\n","import post from '../../../axios/post';\r\nimport word from '../../../shared/static';\r\n\r\nconst login = {\r\n  doLogin: async (data) => {\r\n    const response = await post.AxiosPostLogin(word.URL_LOGIN, data);\r\n    return response;\r\n  },\r\n};\r\n\r\nexport default login;\r\n","import axios from 'axios';\r\n\r\nconst AxiosGet = async ({ url }) => {\r\n  try {\r\n    let percentComplete = 0;\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      onUploadProgress: (progressEvent) => {\r\n        percentComplete = Math.floor((progressEvent.loaded * 100) / progressEvent.total);\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.get(url, config);\r\n    return {\r\n      value: response.data,\r\n      error: null,\r\n      percentCompleted: percentComplete,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      value: null,\r\n      error: error.response,\r\n    };\r\n  }\r\n};\r\n\r\nexport default AxiosGet;\r\n","import axios from 'axios';\r\n\r\nconst AxiosDelete = async (url, data) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.delete(url, data, config);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nexport default AxiosDelete;\r\n","import axios from 'axios';\r\n\r\nconst AxiosPut = async (url, data) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'x-auth-token': localStorage.getItem('token'),\r\n        language: 'id-ID',\r\n      },\r\n      timeout: 4000,\r\n    };\r\n    const response = await axios.put(url, data, config);\r\n    return { value: response.data, error: null };\r\n  } catch (error) {\r\n    return { value: null, error: error.response };\r\n  }\r\n};\r\n\r\nexport default AxiosPut;\r\n","import console from './logger/console';\r\nimport elasticConsole from './logger/elastic-console';\r\nimport writeLocal from './local/write-local';\r\nimport elasticWriteLocal from './local/elastic-write-local';\r\nimport getLocal from './local/get-local';\r\nimport elasticGetLocal from './local/elastic-get-local';\r\nimport api from './api';\r\n\r\nconst env = process.env.REACT_APP_NODE_ENV;\r\n\r\nconst services = {\r\n  //  INI ADALAH PENDAFTARA MODULE YANG NANTINYA BISA DI EXPOSE KE LUAR ( MIDDLEWARE , DLL)\r\n  log: env === 'development' ? console : elasticConsole,\r\n  getLocal: env === 'development' ? getLocal : elasticGetLocal,\r\n  writeLocal: env === 'development' ? writeLocal : elasticWriteLocal,\r\n  api,\r\n};\r\n\r\nexport default services;\r\n","import login from './login';\r\nimport laporanStockGlobalProduksi from './laporanstockglobalproduksi';\r\n\r\nconst api = { login, laporanStockGlobalProduksi };\r\n\r\nexport default api;\r\n","import get from '../../../axios/get';\r\nimport post from '../../../axios/post';\r\nimport deleteAxios from '../../../axios/delete';\r\nimport put from '../../../axios/put';\r\nimport word from '../../../shared/static';\r\n\r\nconst laporanStockGlobalProduksi = {\r\n  getAllLaporanStockGlobalProduksi: async (data) => {\r\n    const response = await get.AxiosGetBody(word.URL_GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI, data);\r\n    return response;\r\n  },\r\n  addLaporanStockGlobalProduksi: async (datakirim) => {\r\n    const response = await post.AxiosPost({\r\n      url: word.URL_ADD_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n      data: datakirim,\r\n    });\r\n    return response;\r\n  },\r\n  deleteLaporanStockGlobalProduksi: async (data) => {\r\n    const response = await deleteAxios.AxiosDelete(\r\n      word.URL_DELETE_LAPORAN_STOCK_GLOBAL_PRODUKSI + data,\r\n    );\r\n    return response;\r\n  },\r\n  editLaporanStockGlobalProduksi: async (url, data) => {\r\n    const response = await put.AxiosPut(word.URL_UPDATE_LAPORAN_STOCK_GLOBAL_PRODUKSI + url, data);\r\n    return response;\r\n  },\r\n};\r\n\r\nexport default laporanStockGlobalProduksi;\r\n","import { LOGIN_FAILED, LOGIN_SUCCESS } from '../actions/login';\r\n\r\nconst initialState = {\r\n  feedback: [],\r\n  error: null,\r\n};\r\n\r\nconst login1 = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_SUCCESS:\r\n      return { feedback: action.payload, error: null };\r\n    case LOGIN_FAILED:\r\n      return { feedback: [], error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login1;\r\n","import {\r\n  SET_LOADING_OFF,\r\n  SET_LOADING_ON,\r\n  SET_LOADING_BUTTON_ON,\r\n  SET_LOADING_BUTTON_OFF,\r\n  CHANGE_TABLE_LAYOUT,\r\n} from '../actions/ui';\r\n\r\nconst initialState = {\r\n  loading: true,\r\n  btnLoading: false,\r\n  typeTable: 'L',\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADING_ON:\r\n    case SET_LOADING_OFF:\r\n      return { ...state, loading: action.payload };\r\n    case SET_LOADING_BUTTON_ON:\r\n    case SET_LOADING_BUTTON_OFF:\r\n      return { ...state, btnLoading: action.payload };\r\n    case CHANGE_TABLE_LAYOUT:\r\n      return { ...state, typeTable: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","// Type your data here, it can be string, or any type of data, just write your variable\r\nimport {\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS,\r\n  SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED,\r\n} from '../actions/laporanstockglobalproduksi';\r\n\r\nconst initialState = {\r\n  feedback_R: [],\r\n  feedback_L: [],\r\n  error: null,\r\n  isEdit: false,\r\n};\r\n\r\nconst laporanStockGlobalProduksi = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS:\r\n      return {\r\n        ...state,\r\n        feedback_L: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS:\r\n      return {\r\n        ...state,\r\n        feedback_R: action.payload.data,\r\n      };\r\n    case SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED:\r\n      return {\r\n        ...state,\r\n        error: action.payload.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default laporanStockGlobalProduksi;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport login from './login';\r\nimport ui from './ui';\r\nimport laporanStockGlobalProduksi from './laporanstockglobalproduksi';\r\n\r\nexport default combineReducers({\r\n  login,\r\n  ui,\r\n  laporanStockGlobalProduksi,\r\n  form: formReducer,\r\n});\r\n","import {\r\n  PAGE_LOADED_LOGIN,\r\n  setLoading,\r\n  BUTTON_LOADED,\r\n  setLoadingButton,\r\n  CHANGE_TABLE_LAYOUT,\r\n} from '../actions/ui';\r\n\r\nconst pageLoadedFlow =\r\n  ({ log }) =>\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === PAGE_LOADED_LOGIN) {\r\n      log('Page Login Loaded');\r\n      dispatch(setLoading(false));\r\n    }\r\n  };\r\n\r\nconst buttonLoadedFlow =\r\n  ({ log }) =>\r\n  ({ dispatch }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === BUTTON_LOADED) {\r\n      log('Button Loaded');\r\n      dispatch(setLoadingButton(false));\r\n    }\r\n  };\r\n\r\nconst tableLayoutFlow =\r\n  ({ log }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === CHANGE_TABLE_LAYOUT) {\r\n      // log('Table Changed L');\r\n      const type = action.payload;\r\n      if (type === 'L') {\r\n        // dispatch(setDataLaporanStockGlobalProduksiSuccess([]));\r\n      } else {\r\n        // dispatch(setDataLaporanStockGlobalProduksiSuccess([]));\r\n      }\r\n    }\r\n  };\r\n\r\nconst data = [pageLoadedFlow, buttonLoadedFlow, tableLayoutFlow];\r\n\r\nexport default data;\r\n","import Swal from 'sweetalert2';\r\n\r\nfunction Success(message) {\r\n  Swal.fire({\r\n    title: 'Yeaay..',\r\n    text: message,\r\n    icon: 'success',\r\n  });\r\n}\r\n\r\nfunction Failed(message) {\r\n  Swal.fire({\r\n    title: 'Ops..',\r\n    text: message,\r\n    icon: 'error',\r\n  });\r\n}\r\nconst data = { Failed, Success };\r\n\r\nexport default data;\r\n","import { compose, applyMiddleware, createStore } from 'redux';\r\nimport reducers from './reducers';\r\nimport middleware from './middleware';\r\n\r\n// dev tool\r\nconst composeEnhancers =\r\n  (process.env.REACT_APP_NODE_ENV === 'development' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\n// eslint-disable-next-line\r\nexport const configureStore = (services) =>\r\n  createStore(reducers, composeEnhancers(applyMiddleware(...middleware.map((f) => f(services)))));\r\n","import { message } from 'antd';\r\nimport * as sweetalert from '../../infrastructure/shared/sweetalert';\r\nimport { loginFailed, loginSuccess, SEND_LOGIN } from '../actions/login';\r\nimport { setLoading } from '../actions/ui';\r\n\r\n/**\r\n({api}) ADALAH PARAMETER YANG DIDAPAT DARI FOLDER INFRASTRUCTURE -> SERVICES -> API \r\n{ DISINI JUGA BISA MEMANGGIL FOLDER YANG LAIN, SEPERTI LOGGER,\r\n   DLL ASALKAN SUDAH TERDAFTAR DI INDEX SERVICE}\r\n   \r\n */\r\n\r\nconst key = 'updatable';\r\n\r\nconst handleLoginFlow =\r\n  ({ api, writeLocal }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === SEND_LOGIN) {\r\n      dispatch(setLoading(true));\r\n      const data = getState().form.LoginForm.values;\r\n      const response = await api.login.doLogin(data);\r\n      if (response?.value !== null) {\r\n        dispatch(loginSuccess(response?.value));\r\n        writeLocal('userInfo', response?.value);\r\n        sweetalert.default.Success('Berhasil Login');\r\n        dispatch(setLoading(false));\r\n      } else if (data?.user_id === 'admin' && data?.password === 'admin') {\r\n        // sweetalert.default.Success('Berhasil Login');\r\n        dispatch(setLoading(false));\r\n        message.loading({ content: 'Loading...', key });\r\n        setTimeout(() => {\r\n          message.success({ content: 'Login Berhasil!', key, duration: 2 });\r\n          window.location.replace('/dashboard');\r\n        }, 1000);\r\n      } else {\r\n        dispatch(loginFailed(response?.error));\r\n        sweetalert.default.Failed('Coba Check Email Dan Passwordnya..');\r\n        dispatch(setLoading(false));\r\n      }\r\n    }\r\n  };\r\n\r\nconst data = [handleLoginFlow];\r\n\r\nexport default data;\r\n","// API => call api in infrastructure -> service -> api\r\n// log => for call console.log and dynamic console.log\r\n// writeLocal for write data to local ( dynamic write depend on mode in env) if production its automatically encrypted\r\n// getLocal for get data from local ( dynamic write depend on mode in env) if production its automatically encrypted\r\n// toas for show toast to screen, its have 4 varians (.Success , .Failed, .Warning, .Info)\r\n// sweetalert for show sweetalert to screen, its have 4 varians (.Success , .Failed, .Warning, .Info)\r\n// dispatch for dispactching action, like store data to reducer, and others\r\n// getState is FUNCTION for get current data in your state (reducer), just call getState().yourReducer.yourData\r\n\r\nimport { reset } from 'redux-form';\r\nimport {\r\n  GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n  setDataLaporanStockGlobalProduksiLSuccess,\r\n  setDataLaporanStockGlobalProduksiLFailed,\r\n  setDataLaporanStockGlobalProduksiRSuccess,\r\n} from '../actions/laporanstockglobalproduksi';\r\nimport * as sweetalert from '../../infrastructure/shared/sweetalert';\r\nimport { setLoadingButton } from '../actions/ui';\r\n\r\nconst laporanStockGlobalProduksi =\r\n  ({ api, log, writeLocal, getLocal, toast }) =>\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  async (action) => {\r\n    next(action);\r\n    if (action.type === GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI) {\r\n      dispatch(setLoadingButton(true));\r\n      const data = getState().form.FormLaporanGlobalProduksi.values;\r\n      const tgl = new Date(data.date);\r\n      data.date = tgl;\r\n      delete data.repair;\r\n      const response = await api.laporanStockGlobalProduksi.addLaporanStockGlobalProduksi(data);\r\n      if (response?.value !== null) {\r\n        sweetalert.default.Success('Berhasil Melihat Laporan !');\r\n        writeLocal('tanggal_lap', tgl.toLocaleDateString());\r\n        if (data.tipe_laporan === 'L') {\r\n          dispatch(setDataLaporanStockGlobalProduksiLSuccess(response?.value));\r\n        } else {\r\n          dispatch(setDataLaporanStockGlobalProduksiRSuccess(response?.value));\r\n        }\r\n        dispatch(reset('FormLaporanGlobalProduksi'));\r\n        dispatch(setLoadingButton(false));\r\n      } else {\r\n        dispatch(setDataLaporanStockGlobalProduksiLFailed(response?.error));\r\n        sweetalert.default.Failed('Gagal Melihat Laporan');\r\n        dispatch(setLoadingButton(false));\r\n      }\r\n    }\r\n  };\r\n\r\nconst data = [laporanStockGlobalProduksi];\r\n\r\nexport default data;\r\n","import ui from './ui';\r\nimport login from './login';\r\nimport laporanstockglobalproduksi from './laporanstockglobalproduksi';\r\n\r\nexport default [...ui, ...login, ...laporanstockglobalproduksi];\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport services from './infrastructure/services';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { configureStore } from './application/store';\r\n\r\nconst app = (\r\n  <HelmetProvider>\r\n    <Suspense fallback={null}>\r\n      <BrowserRouter basename=\"cadp-report-build\">\r\n        <Provider store={configureStore(services)}>\r\n          <Helmet>\r\n            <title>My App</title>\r\n            <link rel=\"canonical\" href=\"https://www.tacobell.com/\" />\r\n          </Helmet>\r\n          <App />\r\n        </Provider>\r\n      </BrowserRouter>\r\n    </Suspense>\r\n  </HelmetProvider>\r\n);\r\n\r\nReactDOM.hydrate(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export const GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi R success';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi R failed';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi L success';\r\nexport const SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED =\r\n  '[laporanstockglobalproduksi] get all laporanstockglobalproduksi L failed';\r\n\r\nexport const getAllLaporanStockGlobalProduksi = {\r\n  type: GET_ALL_LAPORAN_STOCK_GLOBAL_PRODUKSI,\r\n};\r\n\r\nexport const setDataLaporanStockGlobalProduksiRFailed = (error) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_FAILED,\r\n  payload: { data: error },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiRSuccess = (feedback) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_R_SUCCESS,\r\n  payload: { data: feedback },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiLFailed = (error) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_FAILED,\r\n  payload: { data: error },\r\n});\r\n\r\nexport const setDataLaporanStockGlobalProduksiLSuccess = (feedback) => ({\r\n  type: SET_DATA_LAPORAN_STOCK_GLOBAL_PRODUKSI_L_SUCCESS,\r\n  payload: { data: feedback },\r\n});\r\n","export const SEND_LOGIN = '[login] sending login';\r\nexport const LOGIN_SUCCESS = '[login] login success';\r\nexport const LOGIN_FAILED = '[login] login failed';\r\n\r\nexport const sendLogin = {\r\n  type: SEND_LOGIN,\r\n};\r\n\r\nexport const loginSuccess = (feedback) => ({\r\n  type: LOGIN_SUCCESS,\r\n  payload: feedback,\r\n});\r\n\r\nexport const loginFailed = (error) => ({\r\n  type: LOGIN_FAILED,\r\n  payload: error,\r\n});\r\n"],"sourceRoot":""}